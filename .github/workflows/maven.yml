name: Microservices CI/CD Pipeline

on:
  push:
    branches:
      - main
      - api-gateway
      - question-service
      - quiz-service
      - service-registry
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ service-registry, question-service, quiz-service, api-gateway]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # You can use 'adopt', 'zulu', 'temurin', etc.
          cache: maven  # Optional: to cache dependencies

      - name: Build ${{ matrix.service }}
        run: |
         cd ${{ matrix.service }}
          chmod +x mvnw 
         ./mvnw clean install

#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service: [api-gateway, question-service, quiz-service, service-registry]
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#
#      - name: Run tests for ${{ matrix.service }}
#        run: |
#          cd ${{ matrix.service }}/{{ matrix.service }}
#          ./mvnw test

  # Uncomment the following section for Docker build and push

  # docker-build-and-push:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       service: [api-gateway, question-service, quiz-service, service-registry]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       run: |
  #         echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  #     - name: Build Docker image for ${{ matrix.service }}
  #       run: |
  #         cd ${{ matrix.service }}/{{ matrix.service }}
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .

  #     - name: Push Docker image to Docker Hub
  #       run: |
  #         docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  # Uncomment the following section for deployment

  # deploy:
  #   if: github.ref == 'refs/heads/main'
  #   needs: [build, test, docker-build-and-push]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Deploy to production (placeholder)
  #       run: |
  #         echo "Deploying ${{ matrix.service }} to production environment"
